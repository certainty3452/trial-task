replicaCount: 6

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}


podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: "trial.netology.ru"
      paths:
        - path: /
          pathType: ImplementationSpecific
    - host: www.trial.netology.ru
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: #{}
  # limits:
  #   cpu: 1
  #   memory: 1024Mi
  requests:
    cpu: 100m
    memory: 64Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 30
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

HighAvailability:
  enabled: true

volumes: {}

volumeMounts: {}

app_config:
  ## The name of the ConfigMap used by the main app.
  ## Autogenerated if not set or set to "".
  # name: nginx-conf
  ## The annotations of the main app configmap.
  annotations: {}
  ## The entries of the ConfigMap for customizing NGINX configuration.
  entries: #{}
    nginx.conf: |
      user nginx;
      worker_processes  1;
      events {
        worker_connections  1024;
      }
      http {  
          server {
              listen  80 ;
              server_name "~^(?!www\.).*" ;
              return 301 $scheme://www.$host$request_uri;
          }

          server {
                  listen       80 default_server;
                  server_name  "";
                  location / {return 302 https://amazon.com; }
                  location /google { proxy_pass https://google.com/;  }
                  location /freshcells { proxy_pass https://freshcells.de/; }
          }
      }